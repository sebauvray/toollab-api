#!/bin/bash

echo "üé∂ DEV mode: Installing dependencies..."

# Charger les variables du .env dans l'environnement shell
if [ -f .env ]; then
    echo "üîÑ Chargement des variables du .env dans l'environnement..."
    export $(grep -v '^#' .env | xargs)
fi

# Installer les d√©pendances PHP √† chaque d√©marrage
composer install

# V√©rifier si APP_KEY est d√©finie dans le .env (en lisant directement le fichier)
APP_KEY_VALUE=$(grep ^APP_KEY= .env | cut -d '=' -f2-)

if [ -z "$APP_KEY_VALUE" ]; then
    echo "üîë APP_KEY non trouv√©e dans .env, g√©n√©ration en cours..."
    php artisan key:generate
else
    echo "‚úÖ APP_KEY d√©j√† d√©finie dans .env."
fi

# V√©rifier si DB_HOST et DB_DATABASE sont d√©finis
if [ -n "$CONTAINER_NAME_DB" ] && [ -n "$DB_DATABASE" ]; then
    echo "üîé V√©rification de l'existence de la base '$DB_DATABASE' sur l'h√¥te '$CONTAINER_NAME_DB'..."

    # Tester si la DB existe
    mysql -h"${CONTAINER_NAME_DB}" -u"${DB_USERNAME}" -p"${DB_PASSWORD}" -e "USE \`${DB_DATABASE}\`;"

    if [ $? -eq 0 ]; then
        echo "‚úÖ La base '$DB_DATABASE' existe."

        # Compter le nombre de tables dans la base
        TABLE_COUNT=$(mysql -h"${CONTAINER_NAME_DB}" -u"${DB_USERNAME}" -p"${DB_PASSWORD}" -D "${DB_DATABASE}" -sse "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '${DB_DATABASE}';")

        echo "üìä La base '$DB_DATABASE' contient $TABLE_COUNT tables."

        if [ "$TABLE_COUNT" -eq 0 ]; then
            echo "‚ö†Ô∏è Aucune table trouv√©e, lancement des migrations..."
            php artisan migrate --force
        else
            echo "‚úÖ Tables d√©j√† pr√©sentes, aucune migration n√©cessaire."
        fi
    else
        echo "‚ö†Ô∏è La base '$DB_DATABASE' n'existe pas. Laravel se chargera de g√©rer √ßa si n√©cessaire."
    fi
else
    echo "‚ö†Ô∏è Variables DB_HOST ou DB_DATABASE non d√©finies, saut de la v√©rification DB."
fi

# Clear et regen cache config (utile en dev)
php artisan config:clear
php artisan config:cache

echo "‚úÖ DEV ready."

# Lancer php-fpm
exec php-fpm